{"ast":null,"code":"import { KEY_PREFIX } from \"redux-persist/es/constants\";\nexport default function getStoredState(config) {\n  var transforms = config.transforms || [];\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var debug = config.debug;\n  var deserialize;\n\n  if (config.deserialize === false) {\n    deserialize = function deserialize(x) {\n      return x;\n    };\n  } else if (typeof config.deserialize === \"function\") {\n    deserialize = config.deserialize;\n  } else {\n    deserialize = defaultDeserialize;\n  }\n\n  return storage.getItem(storageKey).then(function (serialized) {\n    if (!serialized) return undefined;else {\n      try {\n        var state = {};\n        var rawState = deserialize(serialized);\n        Object.keys(rawState).forEach(function (key) {\n          state[key] = transforms.reduceRight(function (subState, transformer) {\n            return transformer.out(subState, key, rawState);\n          }, deserialize(rawState[key]));\n        });\n        return state;\n      } catch (err) {\n        if (process.env.NODE_ENV !== \"production\" && debug) console.log(\"redux-persist/getStoredState: Error restoring data \".concat(serialized), err);\n        throw err;\n      }\n    }\n  });\n}\n\nfunction defaultDeserialize(serial) {\n  return JSON.parse(serial);\n}","map":{"version":3,"sources":["/Users/sophiesun/Desktop/besttraveller-frontend/node_modules/redux-persist/es/getStoredState.js"],"names":["KEY_PREFIX","getStoredState","config","transforms","storageKey","concat","keyPrefix","undefined","key","storage","debug","deserialize","x","defaultDeserialize","getItem","then","serialized","state","rawState","Object","keys","forEach","reduceRight","subState","transformer","out","err","process","env","NODE_ENV","console","log","serial","JSON","parse"],"mappings":"AAAA,SAASA,UAAT,QAA2B,4BAA3B;AACA,eAAe,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC7C,MAAIC,UAAU,GAAGD,MAAM,CAACC,UAAP,IAAqB,EAAtC;AACA,MAAIC,UAAU,GAAG,GACdC,MADc,CACPH,MAAM,CAACI,SAAP,KAAqBC,SAArB,GAAiCL,MAAM,CAACI,SAAxC,GAAoDN,UAD7C,EAEdK,MAFc,CAEPH,MAAM,CAACM,GAFA,CAAjB;AAGA,MAAIC,OAAO,GAAGP,MAAM,CAACO,OAArB;AACA,MAAIC,KAAK,GAAGR,MAAM,CAACQ,KAAnB;AACA,MAAIC,WAAJ;;AAEA,MAAIT,MAAM,CAACS,WAAP,KAAuB,KAA3B,EAAkC;AAChCA,IAAAA,WAAW,GAAG,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AACpC,aAAOA,CAAP;AACD,KAFD;AAGD,GAJD,MAIO,IAAI,OAAOV,MAAM,CAACS,WAAd,KAA8B,UAAlC,EAA8C;AACnDA,IAAAA,WAAW,GAAGT,MAAM,CAACS,WAArB;AACD,GAFM,MAEA;AACLA,IAAAA,WAAW,GAAGE,kBAAd;AACD;;AAED,SAAOJ,OAAO,CAACK,OAAR,CAAgBV,UAAhB,EAA4BW,IAA5B,CAAiC,UAAUC,UAAV,EAAsB;AAC5D,QAAI,CAACA,UAAL,EAAiB,OAAOT,SAAP,CAAjB,KACK;AACH,UAAI;AACF,YAAIU,KAAK,GAAG,EAAZ;AACA,YAAIC,QAAQ,GAAGP,WAAW,CAACK,UAAD,CAA1B;AACAG,QAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAAUb,GAAV,EAAe;AAC3CS,UAAAA,KAAK,CAACT,GAAD,CAAL,GAAaL,UAAU,CAACmB,WAAX,CAAuB,UAAUC,QAAV,EAAoBC,WAApB,EAAiC;AACnE,mBAAOA,WAAW,CAACC,GAAZ,CAAgBF,QAAhB,EAA0Bf,GAA1B,EAA+BU,QAA/B,CAAP;AACD,WAFY,EAEVP,WAAW,CAACO,QAAQ,CAACV,GAAD,CAAT,CAFD,CAAb;AAGD,SAJD;AAKA,eAAOS,KAAP;AACD,OATD,CASE,OAAOS,GAAP,EAAY;AACZ,YAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCnB,KAA7C,EACEoB,OAAO,CAACC,GAAR,CACE,sDAAsD1B,MAAtD,CACEW,UADF,CADF,EAIEU,GAJF;AAMF,cAAMA,GAAN;AACD;AACF;AACF,GAvBM,CAAP;AAwBD;;AAED,SAASb,kBAAT,CAA4BmB,MAA5B,EAAoC;AAClC,SAAOC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAP;AACD","sourcesContent":["import { KEY_PREFIX } from \"redux-persist/es/constants\";\nexport default function getStoredState(config) {\n  var transforms = config.transforms || [];\n  var storageKey = \"\"\n    .concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX)\n    .concat(config.key);\n  var storage = config.storage;\n  var debug = config.debug;\n  var deserialize;\n\n  if (config.deserialize === false) {\n    deserialize = function deserialize(x) {\n      return x;\n    };\n  } else if (typeof config.deserialize === \"function\") {\n    deserialize = config.deserialize;\n  } else {\n    deserialize = defaultDeserialize;\n  }\n\n  return storage.getItem(storageKey).then(function (serialized) {\n    if (!serialized) return undefined;\n    else {\n      try {\n        var state = {};\n        var rawState = deserialize(serialized);\n        Object.keys(rawState).forEach(function (key) {\n          state[key] = transforms.reduceRight(function (subState, transformer) {\n            return transformer.out(subState, key, rawState);\n          }, deserialize(rawState[key]));\n        });\n        return state;\n      } catch (err) {\n        if (process.env.NODE_ENV !== \"production\" && debug)\n          console.log(\n            \"redux-persist/getStoredState: Error restoring data \".concat(\n              serialized\n            ),\n            err\n          );\n        throw err;\n      }\n    }\n  });\n}\n\nfunction defaultDeserialize(serial) {\n  return JSON.parse(serial);\n}\n"]},"metadata":{},"sourceType":"module"}