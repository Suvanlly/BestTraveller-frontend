{"ast":null,"code":"import { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from \"redux-persist/es/constants\";\nimport autoMergeLevel1 from \"redux-persist/es/stateReconciler/autoMergeLevel1\";\nimport createPersistoid from \"redux-persist/es/createPersistoid\";\nimport defaultGetStoredState from \"redux-persist/es/getStoredState\";\nimport purgeStoredState from \"redux-persist/es/purgeStoredState\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\n\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!config) throw new Error(\"config is required for persistReducer\");\n    if (!config.key) throw new Error(\"key is required in persistor config\");\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n        _persist = _ref._persist,\n        rest = _objectWithoutProperties(_ref, [\"_persist\"]); // $FlowIgnore need to update State type\n\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== \"production\" && _sealed) console.error('redux-persist: rehydrate for \"'.concat(config.key, '\" called after timeout.'), payload, err); // only rehydrate if we are not already sealed\n\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error('redux-persist: persist timed out for persist key \"'.concat(config.key, '\"')));\n      }, timeout); // @NOTE PERSIST resumes if paused.\n\n      _paused = false; // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n\n      if (!_persistoid) _persistoid = createPersistoid(config); // @NOTE PERSIST can be called multiple times, noop after the first\n\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return _objectSpread({}, baseReducer(restState, action), {\n          _persist: _persist\n        });\n      }\n\n      if (typeof action.rehydrate !== \"function\" || typeof action.register !== \"function\") throw new Error(\"redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.\");\n      action.register(config.key);\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== \"production\" && migrateErr) console.error(\"redux-persist: migration error\", migrateErr);\n\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: {\n          version: version,\n          rehydrated: false\n        }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _objectSpread({}, restState, {\n        _persist: _objectSpread({}, _persist, {\n          rehydrated: true\n        }) // @NOTE if key does not match, will continue to default else below\n\n      });\n\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload; // only reconcile state if stateReconciler and inboundState are both defined\n\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n\n        var _newState = _objectSpread({}, reconciledRest, {\n          _persist: _objectSpread({}, _persist, {\n            rehydrated: true\n          })\n        });\n\n        return conditionalUpdate(_newState);\n      }\n    } // if we have not already handled PERSIST, straight passthrough\n\n\n    if (!_persist) return baseReducer(state, action); // run base reducer:\n    // is state modified ? return original : return updated\n\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;\n    return conditionalUpdate(_objectSpread({}, newState, {\n      _persist: _persist\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/sophiesun/Desktop/besttraveller-frontend/node_modules/redux-persist/es/persistReducer.js"],"names":["FLUSH","PAUSE","PERSIST","PURGE","REHYDRATE","DEFAULT_VERSION","autoMergeLevel1","createPersistoid","defaultGetStoredState","purgeStoredState","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","DEFAULT_TIMEOUT","persistReducer","config","baseReducer","process","env","NODE_ENV","Error","storage","version","undefined","debug","stateReconciler","getStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","state","_persist","rehydrated","update","action","_ref","rest","restState","type","_sealed","_rehydrate","payload","err","console","error","concat","rehydrate","setTimeout","register","then","restoredState","migrate","s","v","Promise","resolve","migratedState","migrateErr","result","flush","reducedState","inboundState","reconciledRest","_newState","newState"],"mappings":"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","sourcesContent":["import {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REHYDRATE,\n  DEFAULT_VERSION,\n} from \"redux-persist/es/constants\";\nimport autoMergeLevel1 from \"redux-persist/es/stateReconciler/autoMergeLevel1\";\nimport createPersistoid from \"redux-persist/es/createPersistoid\";\nimport defaultGetStoredState from \"redux-persist/es/getStoredState\";\nimport purgeStoredState from \"redux-persist/es/purgeStoredState\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly)\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(\n          target,\n          key,\n          Object.getOwnPropertyDescriptor(source, key)\n        );\n      });\n    }\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\n\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!config) throw new Error(\"config is required for persistReducer\");\n    if (!config.key) throw new Error(\"key is required in persistor config\");\n    if (!config.storage)\n      throw new Error(\n        \"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\"\n      );\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler =\n    config.stateReconciler === undefined\n      ? autoMergeLevel1\n      : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated &&\n      _persistoid &&\n      !_paused &&\n      _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n      _persist = _ref._persist,\n      rest = _objectWithoutProperties(_ref, [\"_persist\"]); // $FlowIgnore need to update State type\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== \"production\" && _sealed)\n          console.error(\n            'redux-persist: rehydrate for \"'.concat(\n              config.key,\n              '\" called after timeout.'\n            ),\n            payload,\n            err\n          ); // only rehydrate if we are not already sealed\n\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n\n      timeout &&\n        setTimeout(function () {\n          !_sealed &&\n            _rehydrate(\n              undefined,\n              new Error(\n                'redux-persist: persist timed out for persist key \"'.concat(\n                  config.key,\n                  '\"'\n                )\n              )\n            );\n        }, timeout); // @NOTE PERSIST resumes if paused.\n\n      _paused = false; // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n\n      if (!_persistoid) _persistoid = createPersistoid(config); // @NOTE PERSIST can be called multiple times, noop after the first\n\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return _objectSpread({}, baseReducer(restState, action), {\n          _persist: _persist,\n        });\n      }\n\n      if (\n        typeof action.rehydrate !== \"function\" ||\n        typeof action.register !== \"function\"\n      )\n        throw new Error(\n          \"redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.\"\n        );\n      action.register(config.key);\n      getStoredState(config).then(\n        function (restoredState) {\n          var migrate =\n            config.migrate ||\n            function (s, v) {\n              return Promise.resolve(s);\n            };\n\n          migrate(restoredState, version).then(\n            function (migratedState) {\n              _rehydrate(migratedState);\n            },\n            function (migrateErr) {\n              if (process.env.NODE_ENV !== \"production\" && migrateErr)\n                console.error(\"redux-persist: migration error\", migrateErr);\n\n              _rehydrate(undefined, migrateErr);\n            }\n          );\n        },\n        function (err) {\n          _rehydrate(undefined, err);\n        }\n      );\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: {\n          version: version,\n          rehydrated: false,\n        },\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist,\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist,\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge)\n        return _objectSpread({}, restState, {\n          _persist: _objectSpread({}, _persist, {\n            rehydrated: true,\n          }), // @NOTE if key does not match, will continue to default else below\n        });\n\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload; // only reconcile state if stateReconciler and inboundState are both defined\n\n        var reconciledRest =\n          stateReconciler !== false && inboundState !== undefined\n            ? stateReconciler(inboundState, state, reducedState, config)\n            : reducedState;\n\n        var _newState = _objectSpread({}, reconciledRest, {\n          _persist: _objectSpread({}, _persist, {\n            rehydrated: true,\n          }),\n        });\n\n        return conditionalUpdate(_newState);\n      }\n    } // if we have not already handled PERSIST, straight passthrough\n\n    if (!_persist) return baseReducer(state, action); // run base reducer:\n    // is state modified ? return original : return updated\n\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;\n    return conditionalUpdate(\n      _objectSpread({}, newState, {\n        _persist: _persist,\n      })\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}